from tkinter import *
import tkinter.messagebox as tmsg
import xgboost as xgb
def predict():
 try:
 from xgboost import XGBClassifier
 XG2=XGBClassifier()
 XG2.load_model("model.h4")
 age = float(age_var.get())
 weight = float(weight_var.get())
 sg = float(sg_var.get())
 alb = float(alb_var.get())
 egfr = float(egfr_var.get())
 na = float(na_var.get())
 k = float(k_var.get())
 bun = float(bun_var.get())
 creat = float(creat_var.get())
 rbc = float(rbc_var.get())
 wbc = float(wbc_var.get())
 appetite = float(appetite_var.get())
 anemia = float(anemia_var.get())
 htn = float(htn_var.get())
 dm = float(dm_var.get())
 pred=XG2.predict([[age,weight,sg,alb,egfr,na ,k ,bun,creat, rbc,wbc,appetite,anemia,htn, 
dm]])
 if(pred[0]==0):
 print('the present stage of the patient is ESRD-FINAL_STAGE')
 tmsg.showinfo("CKD_STAGE", f"the present stage of the patient is ESRDFINAL_STAGE")
 elif(pred[0]==1):
 print('the present stage of the patient is MILD-FIRST_STAGE')
 tmsg.showinfo("CKD_STAGE", f"the present stage of the patient is MILDFIRST_STAGE")
 else:
 print('the present stage of the patient is SEVERE-SECOND_STAGE')
 tmsg.showinfo("CKD_STAGE", f"the present stage of the patient SEVERESECOND_STAGE")
 except Exception as e:
34
 tmsg.showerror("Error", f"An error occurred: {str(e)}")
root = Tk()
root.geometry("655x333")
root.title("TESTING_VALUES")
age_label = Label(root, text="Age")
weight_label = Label(root, text="Weight")
sg_label = Label(root, text="SG")
alb_label = Label(root, text="Alb")
egfr_label = Label(root, text="eGFR")
na_label = Label(root, text="Na")
k_label = Label(root, text="K")
bun_label = Label(root, text="BUN")
creat_label = Label(root, text="Creat")
rbc_label = Label(root, text="Rbc")
wbc_label = Label(root, text="Wbc")
appetite_label = Label(root, text="Appetite")
anemia_label = Label(root, text="Anemia")
htn_label = Label(root, text="HTN")
dm_label = Label(root, text="DM")
age_var = StringVar()
weight_var = StringVar()
sg_var = StringVar()
alb_var = StringVar()
egfr_var = StringVar()
na_var = StringVar()
k_var = StringVar()
bun_var = StringVar()
creat_var = StringVar()
rbc_var = StringVar()
wbc_var = StringVar()
appetite_var = StringVar()
anemia_var = StringVar()
htn_var = StringVar()
dm_var = StringVar()
age_entry = Entry(root, textvariable=age_var)
weight_entry = Entry(root, textvariable=weight_var)
sg_entry = Entry(root, textvariable=sg_var)
alb_entry = Entry(root, textvariable=alb_var)
egfr_entry = Entry(root, textvariable=egfr_var)
na_entry = Entry(root, textvariable=na_var)
35
k_entry = Entry(root, textvariable=k_var)
bun_entry = Entry(root, textvariable=bun_var)
creat_entry = Entry(root, textvariable=creat_var)
rbc_entry = Entry(root, textvariable=rbc_var)
wbc_entry = Entry(root, textvariable=wbc_var)
appetite_entry = Entry(root, textvariable=appetite_var)
anemia_entry = Entry(root, textvariable=anemia_var)
htn_entry = Entry(root, textvariable=htn_var)
dm_entry = Entry(root, textvariable=dm_var)
age_label.grid(row=0, column=0)
weight_label.grid(row=1, column=0)
sg_label.grid(row=2, column=0)
alb_label.grid(row=3, column=0)
egfr_label.grid(row=4, column=0)
na_label.grid(row=5, column=0)
k_label.grid(row=6, column=0)
bun_label.grid(row=7, column=0)
creat_label.grid(row=8, column=0)
rbc_label.grid(row=9, column=0)
wbc_label.grid(row=10, column=0)
appetite_label.grid(row=11, column=0)
anemia_label.grid(row=12, column=0)
htn_label.grid(row=13, column=0)
dm_label.grid(row=14, column=0)
age_entry.grid(row=0, column=1)
weight_entry.grid(row=1, column=1)
sg_entry.grid(row=2, column=1)
alb_entry.grid(row=3, column=1)
egfr_entry.grid(row=4, column=1)
na_entry.grid(row=5, column=1)
k_entry.grid(row=6, column=1)
bun_entry.grid(row=7, column=1)
creat_entry.grid(row=8, column=1)
rbc_entry.grid(row=9, column=1)
wbc_entry.grid(row=10, column=1)
appetite_entry.grid(row=11, column=1)
anemia_entry.grid(row=12, column=1)
htn_entry.grid(row=13, column=1)
dm_entry.grid(row=14, column=1)
predict_button = Button(root, text="Predict", command=predict)
36
predict_button.grid(row=15, columnspan=2)
root.mainloop()